# application.properties

# Configuração do Servidor Spring Boot
server.port=8080
# Porta onde o backend será executado

# Configuração do Banco de Dados PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/elftech
spring.datasource.username=elifelipe
spring.datasource.password=1996
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuração do JPA/Hibernate
spring.jpa.hibernate.ddl-auto=create
# "create" irá recriar o schema do banco de dados a cada inicialização (bom para testes, mas cuidado em produção)
spring.jpa.show-sql=true
# Exibe as queries SQL geradas pelo Hibernate no console
spring.jpa.properties.hibernate.format_sql=true
# Formata as queries SQL para melhor legibilidade

# Configuração de Segurança da API (Token JWT, por exemplo)
api.security.token.secret=AIzaSyA63_MI9giqJMbuiyPPWWnJJVnqZK9Qoy0
# Esta é uma chave secreta para assinar tokens; em produção, use uma chave mais forte e gerada de forma segura.

# Ativa o log detalhado para o Spring Security
logging.level.org.springframework.security=DEBUG

# Configurações da Efí Bank (antigo Gerencianet)
# Para ambiente de testes (Sandbox)
efi.base-url=https://sandbox.gerencianet.com.br/v1

# Suas credenciais de Client ID e Client Secret da Efí Bank (Sandbox)
efi.client-id=Client_Id_1d865582f07c1b5043d7850f5927594a
efi.client-secret=Client_Secret_1b5043d7850f5927594a1d865582f07c

# Configurações para o certificado PIX (necessário para operações PIX)
# 1. Baixe o certificado de homologação no painel da Efí.
# 2. Renomeie o arquivo para 'homologacao.p12' (ou o nome que preferir).
# 3. Coloque o arquivo na pasta 'src/main/resources/certificados/'.
efi.pix-cert-path=classpath:certificados/homologacao.p12
efi.pix-cert-password=Gerencianet # A senha padrão para certificados de homologação costuma ser esta. Verifique no painel.


# Configurações de CORS para permitir requisições do seu frontend Angular
# Ajuste 'http://localhost:4200' para a URL do seu frontend Angular em desenvolvimento.
# Em produção, use a URL real do seu domínio (ex: https://seusite.com).
spring.webflux.cors.allowed-origins=http://localhost:4200
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=*
spring.webflux.cors.allow-credentials=true
